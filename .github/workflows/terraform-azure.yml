name: Terraform IaC Pipeline

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform-init:
    name: Terraform Init & Plan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Azure Service Principal credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.APP_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Terraform Init (with Debug)
        run: |
          terraform init -input=false | tee terraform-init.log
          echo "Checking if .terraform directory exists..."
          ls -lA .terraform || echo "❌ .terraform directory NOT FOUND!"

      - name: Terraform Plan
        run: terraform plan -out=tfplan

      - name: Debug - List Files After Terraform Init
        run: ls -R

      - name: Archive Terraform Init Output
        run: |
          tar -cvf terraform-init-output.tar \
            terraform-init.log tfplan terraform.lock.hcl \
            .terraform/ || echo "⚠️ Warning: Some files may be missing."

      - name: Upload Terraform Init Output
        uses: actions/upload-artifact@v4
        with:
          name: terraform-init-output
          path: terraform-init-output.tar

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    needs: terraform-init
    permissions:
      id-token: write
      contents: read
    environment: dev

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Download Terraform Init Output
        uses: actions/download-artifact@v4
        with:
          name: terraform-init-output
          path: .

      - name: Verify Artifact Existence
        run: |
          if [ ! -f terraform-init-output.tar ]; then
            echo "❌ Artifact terraform-init-output.tar NOT FOUND!"
            exit 1
          fi

      - name: Extract Terraform Init Output
        run: tar -xvf terraform-init-output.tar

      - name: Debug - List Extracted Files
        run: ls -R

      - name: Set Azure Service Principal credentials
        run: |
          echo "ARM_CLIENT_ID=${{ secrets.APP_ID }}" >> $GITHUB_ENV
          echo "ARM_CLIENT_SECRET=${{ secrets.CLIENT_SECRET }}" >> $GITHUB_ENV
          echo "ARM_TENANT_ID=${{ secrets.TENANT_ID }}" >> $GITHUB_ENV
          echo "ARM_SUBSCRIPTION_ID=${{ secrets.SUBSCRIPTION_ID }}" >> $GITHUB_ENV

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.5.0

      - name: Re-Run Terraform Init
        run: |
          terraform init -input=false
          echo "Checking if .terraform directory exists after re-init..."
          ls -lA .terraform || echo "❌ .terraform directory NOT FOUND!"

      - name: Recreate Terraform Plan (To Fix Dependency Issue)
        run: terraform plan -out=tfplan

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan
